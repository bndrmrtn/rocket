// AUTO GENERATED CODE - DO NOT EDIT
// GENERATED BY ROCKET
// GITHUB: https://github.com/bndrmrtn/rocket
package dist

import (
	"database/sql"
)

func findOne[M any](db *sql.DB, query string, params []any) (*M, error) {
	var model M

	if err := db.QueryRow(query, params...).Scan(&model); err != nil {
		return nil, err
	}

	return &model, nil
}

func findMany[M any](db *sql.DB, query string, params []any) ([]M, error) {
	rows, err := db.Query(query, params...)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var models []M

	for rows.Next() {
		var model M
		if err := rows.Scan(&model); err != nil {
			return nil, err
		}

		models = append(models, model)
	}

	if err := rows.Err(); err != nil {
		return nil, err
	}

	return models, nil
}
type Item struct {
	ID string `json:"id"`
	Name string `json:"name"`
	Quantity string `json:"quantity"`
}

func FindByID(db *sql.DB, _limitCount int) ([]Item, error) {
	rawQuery := `SELECT * FROM Item ORDER BY  RAND(), Item.id DESC, Item.name ASC LIMIT ?  OFFSET 2`
	return findMany[Item](db, rawQuery, []any{_limitCount})
}

func FirstItem(db *sql.DB) (*Item, error) {
	rawQuery := `SELECT * FROM Item ORDER BY Item.id ASC`
	return findOne[Item](db, rawQuery, []any{})
}

func RandomID(db *sql.DB) (*Item, error) {
	rawQuery := `SELECT * FROM Item ORDER BY  RAND() LIMIT 1`
	return findOne[Item](db, rawQuery, []any{})
}

