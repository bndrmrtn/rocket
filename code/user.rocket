// comment
/*
    multi line comments only supported outside of blocks {}
*/

settings {
    table_casing default
}

hashing password {
    algo bcrypt(15)
} // but it can be added here too, outside ;)

enum Role {
    ADMIN = "admin"
    USER = "user"
}

schema global {
    id number primary increment
    created_at datetime @default(now()) // hello
    updated_at datetime @default(now())
}

model User {
    &global // xd
    username string
    password string @sensitive @hash("password")
    email_verified_at datetime nullable
    role &Role @default(&Role.USER)
    images $hasMany(Image)
}

model Image {
    &global
    user $belongsTo(User, id) constraint @cascadeOnUpdate @onDelete("cascade")
}

query latestUser {
    get User.OrderBy(desc User.created_at)
}

query allUser {
    []get User
}

query allUserID {
    []get{User.ID} User
}

settings "set:Queries global" {
    OrderBy(desc @field.PrimaryKey)
}

query findByEmail(_email string) {
    get User.Where(User.email == _email)
}
